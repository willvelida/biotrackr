name: Run .NET Unit Tests

on:
    workflow_call:
        inputs:
            dotnet-version:
                description: 'The version of .NET to use'
                required: true
                type: string
            working-directory:
                description: 'The working directory to run the tests'
                required: true
                type: string
            coverage-threshold:
                description: 'Minimum coverage percentage threshold'
                required: false
                type: number
                default: 70
            fail-below-threshold:
                description: 'Whether to fail the build if coverage is below threshold'
                required: false
                type: boolean
                default: true

jobs:
    run-unit-tests:
        name: Run Unit Tests
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ${{ inputs.working-directory }}
        steps:
            - name: Checkout Repository code
              uses: actions/checkout@v4

            - name: Setup .NET ${{ inputs.dotnet-version }}
              uses: actions/setup-dotnet@v4
              with:
                dotnet-version: ${{ inputs.dotnet-version }}
            
            - name: Install dependencies
              run: dotnet restore

            - name: Build
              run: dotnet build --no-restore --verbosity normal

            - name: Run unit tests
              run: |
                dotnet test \
                  --no-build \
                  --verbosity normal \
                  --collect:"XPlat Code Coverage" \
                  --logger "trx;LogFileName=test-results.trx" \
                  --results-directory ./TestResults

            - name: Generate Coverage Report
              run: |
                  dotnet tool install -g dotnet-reportgenerator-globaltool
                  reportgenerator \
                    "-reports:./TestResults/**/coverage.cobertura.xml" \
                    "-targetdir:./CoverageReport" \
                    "-reporttypes:Cobertura;Html;MarkdownSummaryGithub" \
                    "-filefilters:-*.g.cs"

            - name: Upload Coverage Report
              uses: actions/upload-artifact@v4
              if: always()
              with:
                name: coverage-report-${{ github.run_number }}
                path: ${{ inputs.working-directory }}/CoverageReport
                retention-days: 30

            - name: Code Coverage Summary
              uses: irongut/CodeCoverageSummary@v1.3.0
              with:
                  filename: ${{ inputs.working-directory }}/CoverageReport/Cobertura.xml
                  badge: true
                  fail_below_min: ${{ inputs.fail-below-threshold }}
                  format: markdown
                  hide_branch_rate: false
                  hide_complexity: true
                  indicators: true
                  output: both
                  thresholds: '${{ inputs.coverage-threshold }} 80'

            - name: Add Coverage PR Comment
              uses: marocchino/sticky-pull-request-comment@v2
              if: github.event_name == 'pull_request'
              with:
                recreate: true
                path: code-coverage-results.md

            - name: Write to Job Summary
              run: cat ${{ inputs.working-directory }}/CoverageReport/SummaryGithub.md >> $GITHUB_STEP_SUMMARY