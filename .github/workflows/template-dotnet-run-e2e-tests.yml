name: Run .NET E2E Tests with Cosmos DB Emulator

on:
    workflow_call:
        inputs:
            dotnet-version:
                description: 'The version of .NET to use'
                required: true
                type: string
            working-directory:
                description: 'The working directory to run the tests'
                required: true
                type: string
            test-filter:
                description: 'Test filter expression for E2E tests'
                required: false
                type: string
                default: 'Category=E2E|FullyQualifiedName~WeightEndpointsTests'
        secrets:
            client-id:
                required: true
            tenant-id:
                required: true
            subscription-id:
                required: true

jobs:
    run-e2e-tests:
        name: Run E2E Tests with Cosmos DB Emulator
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ${{ inputs.working-directory }}

        services:
            cosmos-emulator:
                image: mcr.microsoft.com/cosmosdb/linux/azure-cosmos-emulator:latest
                ports:
                    - 8081:8081
                    - 10251:10251
                    - 10252:10252
                    - 10253:10253
                    - 10254:10254
                env:
                    AZURE_COSMOS_EMULATOR_PARTITION_COUNT: 10
                    AZURE_COSMOS_EMULATOR_ENABLE_DATA_PERSISTENCE: false
                    AZURE_COSMOS_EMULATOR_IP_ADDRESS_OVERRIDE: 127.0.0.1
                options: >-
                    --health-cmd "curl -k https://localhost:8081/_explorer/emulator.pem"
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 30

        steps:
            - name: Checkout Repository code
              uses: actions/checkout@v4

            - name: Setup .NET ${{ inputs.dotnet-version }}
              uses: actions/setup-dotnet@v4
              with:
                dotnet-version: ${{ inputs.dotnet-version }}

            - name: Wait for Cosmos DB Emulator
              run: |
                echo "Waiting for Cosmos DB Emulator to be ready..."
                for i in {1..30}; do
                  if curl -k https://localhost:8081/_explorer/emulator.pem > /dev/null 2>&1; then
                    echo "Cosmos DB Emulator is ready!"
                    break
                  fi
                  echo "Waiting... (attempt $i/30)"
                  sleep 10
                done

            - name: Download Cosmos DB Emulator Certificate
              run: |
                curl -k https://localhost:8081/_explorer/emulator.pem > emulatorcert.crt
                sudo cp emulatorcert.crt /usr/local/share/ca-certificates/
                sudo update-ca-certificates

            - name: Install dependencies
              run: dotnet restore

            - name: Build
              run: dotnet build --no-restore --verbosity normal

            - name: Run E2E tests
              run: |
                dotnet test \
                  --no-build \
                  --verbosity normal \
                  --filter "${{ inputs.test-filter }}" \
                  --logger "trx;LogFileName=e2e-test-results.trx" \
                  --results-directory ./TestResults
              env:
                cosmosdbendpoint: https://localhost:8081
                Biotrackr:CosmosDb:AccountKey: C2y6yDjf5/R+ob0N8A7Cgv30VRDJIWEHLM+4QDU5DE2nQ9nDuVTqobD4b8mGGyPMbIZnqyMsEcaGQy67XIw/Jw==
                Biotrackr:DatabaseName: biotrackr-test
                Biotrackr:ContainerName: weight-test
                azureappconfigendpoint: ""
                managedidentityclientid: ${{ secrets.client-id }}
                tenantid: ${{ secrets.tenant-id }}

            - name: Upload Test Results
              uses: actions/upload-artifact@v4
              if: always()
              with:
                name: e2e-test-results-${{ github.run_number }}
                path: ${{ inputs.working-directory }}/TestResults/*.trx
                retention-days: 30

            - name: Publish Test Results
              uses: dorny/test-reporter@v1
              if: always()
              with:
                name: E2E Test Results
                path: ${{ inputs.working-directory }}/TestResults/*.trx
                reporter: dotnet-trx
                fail-on-error: true
